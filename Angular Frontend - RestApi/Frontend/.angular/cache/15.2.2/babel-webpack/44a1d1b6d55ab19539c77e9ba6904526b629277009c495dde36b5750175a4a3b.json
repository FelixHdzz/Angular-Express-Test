{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Notify } from 'notiflix';\nlet AppComponent = class AppComponent {\n  constructor(itemService, titleService, spinner) {\n    this.itemService = itemService;\n    this.spinner = spinner;\n    titleService.setTitle('Express Server Test Frontend');\n  }\n  getData(id) {\n    try {\n      var id2;\n      if (id == \"\") {\n        id2 = 0;\n      } else {\n        id2 = parseInt(id);\n      }\n      if (id2 > 0 && id2 < 1001) {\n        this.spinner.show();\n        this.itemService.getItems(id).subscribe(data => {\n          console.log(data);\n        });\n        Notify.success('Accion realizada correctamente.');\n      } else if (id2 > 1000) {\n        Notify.failure('Valor superior a los registros.');\n      } else {\n        Notify.warning('Existen campos vacios.');\n      }\n    } catch (exception) {\n      Notify.failure('Error en obtener informacion del servidor. Codigo: ' + exception);\n    } finally {\n      this.spinner.hide();\n    }\n  }\n  ngOnInit() {\n    this.spinner.show();\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAe,eAAe;AAEhD,SAASC,MAAM,QAAQ,UAAU;AAU1B,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EAIvBC,YAAoBC,WAAwB,EAAEC,YAAmB,EAAUC,OAA0B;IAAjF,gBAAW,GAAXF,WAAW;IAA4C,YAAO,GAAPE,OAAO;IAChFD,YAAY,CAACE,QAAQ,CAAC,8BAA8B,CAAC;EACvD;EAEAC,OAAO,CAACC,EAAS;IACf,IACA;MACE,IAAIC,GAAG;MAEP,IAAGD,EAAE,IAAI,EAAE,EAAC;QACVC,GAAG,GAAG,CAAC;OACR,MACG;QACFA,GAAG,GAAGC,QAAQ,CAACF,EAAE,CAAC;;MAGpB,IAAIC,GAAG,GAAG,CAAC,IAAIA,GAAG,GAAG,IAAI,EACzB;QACE,IAAI,CAACJ,OAAO,CAACM,IAAI,EAAE;QAEnB,IAAI,CAACR,WAAW,CAACS,QAAQ,CAACJ,EAAE,CAAC,CAACK,SAAS,CAACC,IAAI,IAAG;UAC7CC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;QACnB,CAAC,CAAC;QAEFd,MAAM,CAACiB,OAAO,CAAC,iCAAiC,CAAC;OAClD,MACI,IAAIR,GAAG,GAAG,IAAI,EAAC;QAClBT,MAAM,CAACkB,OAAO,CAAC,iCAAiC,CAAC;OAClD,MAED;QACElB,MAAM,CAACmB,OAAO,CAAC,wBAAwB,CAAC;;KAG3C,CACD,OAAOC,SAAS,EAChB;MACEpB,MAAM,CAACkB,OAAO,CAAC,qDAAqD,GAAGE,SAAS,CAAC;KAClF,SACM;MACL,IAAI,CAACf,OAAO,CAACgB,IAAI,EAAE;;EAEvB;EAEAC,QAAQ;IACN,IAAI,CAACjB,OAAO,CAACM,IAAI,EAAE;EACrB;CACD;AAnDYV,YAAY,eANxBF,SAAS,CAAC;EACTwB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,qBAAqB;CAClC,CAAC,GAEWxB,YAAY,CAmDxB;SAnDYA,YAAY","names":["Component","Notify","AppComponent","constructor","itemService","titleService","spinner","setTitle","getData","id","id2","parseInt","show","getItems","subscribe","data","console","log","success","failure","warning","exception","hide","ngOnInit","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\PC1\\Documents\\HTML Proyects\\Angular Frontend - RestApi\\Frontend\\src\\app\\app.component.ts"],"sourcesContent":["import { Component, OnInit} from '@angular/core';\nimport { ItemService } from './restapi.service';\nimport { Notify } from 'notiflix';\nimport { Title } from '@angular/platform-browser';\nimport { NgxSpinnerService } from \"ngx-spinner\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit {\n  \n  public items2: any[];\n\n  constructor(private itemService: ItemService, titleService: Title, private spinner: NgxSpinnerService) {\n    titleService.setTitle('Express Server Test Frontend');\n  }\n  \n  getData(id:string) {\n    try\n    {\n      var id2;\n\n      if(id == \"\"){\n        id2 = 0;\n      }\n      else{\n        id2 = parseInt(id);\n      }\n\n      if (id2 > 0 && id2 < 1001)\n      {\n        this.spinner.show();\n\n        this.itemService.getItems(id).subscribe(data => {\n          console.log(data)\n        });\n\n        Notify.success('Accion realizada correctamente.');\n      }\n      else if (id2 > 1000){\n        Notify.failure('Valor superior a los registros.');\n      }\n      else\n      {\n        Notify.warning('Existen campos vacios.');\n      }\n      \n    }\n    catch (exception)\n    {\n      Notify.failure('Error en obtener informacion del servidor. Codigo: ' + exception);\n    }\n    finally{\n      this.spinner.hide();\n    }\n  }\n  \n  ngOnInit() {\n    this.spinner.show();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}