{"ast":null,"code":"import { Notify } from 'notiflix';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/restapi.service\";\nimport * as i2 from \"@angular/router\";\nexport class AppComponent {\n  constructor(apiConsume) {\n    this.apiConsume = apiConsume;\n    this.title = 'Express Server Test Frontend';\n  }\n  getData(id) {\n    try {\n      const id2 = parseInt(id);\n      if (id2 != 0) {\n        this.apiConsume.getItems(id2);\n        Notify.success('Accion realizada correctamente.');\n      } else {\n        Notify.warning('Existen campos vacios.');\n      }\n    } catch {\n      Notify.failure('Error en obtener informacion del servidor.');\n    }\n  }\n  ngOnInit() {}\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.RestApiService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 5,\n  vars: 0,\n  consts: [[\"type\", \"number\", \"id\", \"inputPassword2\", \"placeholder\", \"ID\", 1, \"form-control\"], [\"intp\", \"\"], [1, \"btn\", \"btn-primary\", \"mb-2\", 3, \"click\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelement(0, \"input\", 0, 1);\n      i0.ɵɵelementStart(2, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_2_listener() {\n        i0.ɵɵrestoreView(_r1);\n        const _r0 = i0.ɵɵreference(1);\n        return i0.ɵɵresetView(ctx.getData(_r0.value));\n      });\n      i0.ɵɵtext(3, \"Solicitar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"router-outlet\");\n    }\n  },\n  dependencies: [i2.RouterOutlet],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,MAAM,QAAQ,UAAU;;;;AAQjC,OAAM,MAAOC,YAAY;EACvBC,YAAmBC,UAA0B;IAA1B,eAAU,GAAVA,UAAU;IA8B7B,UAAK,GAAG,8BAA8B;EA5BtC;EAEAC,OAAO,CAACC,EAAS;IACf,IACA;MACE,MAAMC,GAAG,GAAGC,QAAQ,CAACF,EAAE,CAAC;MAExB,IAAIC,GAAG,IAAI,CAAC,EACZ;QACE,IAAI,CAACH,UAAU,CAACK,QAAQ,CAACF,GAAG,CAAC;QAC7BN,MAAM,CAACS,OAAO,CAAC,iCAAiC,CAAC;OAClD,MAED;QACET,MAAM,CAACU,OAAO,CAAC,wBAAwB,CAAC;;KAG3C,CACD,MACA;MACEV,MAAM,CAACW,OAAO,CAAC,4CAA4C,CAAC;;EAEhE;EAEAC,QAAQ,IAER;;AA7BWX,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAY;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MCVzBC,8BAAqF;MACrFA,iCAAmE;MAA9BA;QAAAA;QAAA;QAAA,OAASA,qCAAmB;MAAA,EAAC;MAACA,yBAAS;MAAAA,iBAAS;MAErFA,gCAA+B","names":["Notify","AppComponent","constructor","apiConsume","getData","id","id2","parseInt","getItems","success","warning","failure","ngOnInit","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\PC1\\Documents\\HTML Proyects\\Angular Frontend - RestApi\\Frontend\\src\\app\\app.component.ts","C:\\Users\\PC1\\Documents\\HTML Proyects\\Angular Frontend - RestApi\\Frontend\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnInit} from '@angular/core';\nimport { RestApiService } from './services/restapi.service';\nimport { Notify } from 'notiflix';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit {\n  constructor(public apiConsume: RestApiService) {\n    \n  }\n\n  getData(id:string): void {\n    try\n    {\n      const id2 = parseInt(id);\n\n      if (id2 != 0)\n      {\n        this.apiConsume.getItems(id2);\n        Notify.success('Accion realizada correctamente.');\n      }\n      else\n      {\n        Notify.warning('Existen campos vacios.');\n      }\n      \n    }\n    catch\n    {\n      Notify.failure('Error en obtener informacion del servidor.');\n    }\n  }\n  \n  ngOnInit() {\n    \n  }\n\n  title = 'Express Server Test Frontend';\n}\n","<input #intp type=\"number\" class=\"form-control\" id=\"inputPassword2\" placeholder=\"ID\">\n<button class=\"btn btn-primary mb-2\" (click)=\"getData(intp.value)\">Solicitar</button>\n\n<router-outlet></router-outlet>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}