{"ast":null,"code":"import { Notify } from 'notiflix';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./restapi.service\";\nimport * as i2 from \"@angular/platform-browser\";\nimport * as i3 from \"@angular/router\";\nexport class AppComponent {\n  constructor(itemService, titleService) {\n    this.itemService = itemService;\n    titleService.setTitle('Express Server Test Frontend');\n  }\n  getData(id) {\n    try {\n      if (id != \"\") {\n        this.itemService.getItems(id).subscribe(data => {\n          console.log(data);\n        });\n        Notify.success('Accion realizada correctamente.');\n      } else if (id > 1000) ;else {\n        Notify.warning('Existen campos vacios.');\n      }\n    } catch (exception) {\n      Notify.failure('Error en obtener informacion del servidor. Codigo: ' + exception);\n    } finally {}\n  }\n  ngOnInit() {}\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.ItemService), i0.ɵɵdirectiveInject(i2.Title));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 5,\n  vars: 0,\n  consts: [[\"type\", \"text\", \"id\", \"inputPassword2\", \"placeholder\", \"ID\", 1, \"form-control\"], [\"intp\", \"\"], [1, \"btn\", \"btn-primary\", \"mb-2\", 3, \"click\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelement(0, \"input\", 0, 1);\n      i0.ɵɵelementStart(2, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_2_listener() {\n        i0.ɵɵrestoreView(_r1);\n        const _r0 = i0.ɵɵreference(1);\n        return i0.ɵɵresetView(ctx.getData(_r0.value));\n      });\n      i0.ɵɵtext(3, \"Solicitar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"router-outlet\");\n    }\n  },\n  dependencies: [i3.RouterOutlet],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,MAAM,QAAQ,UAAU;;;;;AASjC,OAAM,MAAOC,YAAY;EAIvBC,YAAoBC,WAAwB,EAAEC,YAAmB;IAA7C,gBAAW,GAAXD,WAAW;IAC7BC,YAAY,CAACC,QAAQ,CAAC,8BAA8B,CAAC;EACvD;EAEAC,OAAO,CAACC,EAAS;IACf,IACA;MACE,IAAIA,EAAE,IAAI,EAAE,EACZ;QACE,IAAI,CAACJ,WAAW,CAACK,QAAQ,CAACD,EAAE,CAAC,CAACE,SAAS,CAACC,IAAI,IAAG;UAC7CC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;QACnB,CAAC,CAAC;QAEFV,MAAM,CAACa,OAAO,CAAC,iCAAiC,CAAC;OAClD,MACI,IAAIN,EAAE,GAAG,IAAI,EAClB,CADmB,KAEnB;QACEP,MAAM,CAACc,OAAO,CAAC,wBAAwB,CAAC;;KAG3C,CACD,OAAOC,SAAS,EAChB;MACEf,MAAM,CAACgB,OAAO,CAAC,qDAAqD,GAAGD,SAAS,CAAC;KAClF,SACM;EAGT;EAEAE,QAAQ,IACR;;AApCWhB,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAiB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MCXzBC,8BAAmF;MACnFA,iCAAmE;MAA9BA;QAAAA;QAAA;QAAA,OAASA,qCAAmB;MAAA,EAAC;MAACA,yBAAS;MAAAA,iBAAS;MAErFA,gCAA+B","names":["Notify","AppComponent","constructor","itemService","titleService","setTitle","getData","id","getItems","subscribe","data","console","log","success","warning","exception","failure","ngOnInit","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\PC1\\Documents\\HTML Proyects\\Angular Frontend - RestApi\\Frontend\\src\\app\\app.component.ts","C:\\Users\\PC1\\Documents\\HTML Proyects\\Angular Frontend - RestApi\\Frontend\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnInit} from '@angular/core';\nimport { ItemService } from './restapi.service';\nimport { Notify } from 'notiflix';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit {\n  \n  public items2: any[];\n\n  constructor(private itemService: ItemService, titleService: Title) {\n    titleService.setTitle('Express Server Test Frontend');\n  }\n  \n  getData(id:string) {\n    try\n    {\n      if (id != \"\")\n      {\n        this.itemService.getItems(id).subscribe(data => {\n          console.log(data)\n        });\n\n        Notify.success('Accion realizada correctamente.');\n      }\n      else if (id > 1000)\n      else\n      {\n        Notify.warning('Existen campos vacios.');\n      }\n      \n    }\n    catch (exception)\n    {\n      Notify.failure('Error en obtener informacion del servidor. Codigo: ' + exception);\n    }\n    finally{\n\n    }\n  }\n  \n  ngOnInit() {\n  }\n}\n","<input #intp type=\"text\" class=\"form-control\" id=\"inputPassword2\" placeholder=\"ID\">\n<button class=\"btn btn-primary mb-2\" (click)=\"getData(intp.value)\">Solicitar</button>\n\n<router-outlet></router-outlet>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}